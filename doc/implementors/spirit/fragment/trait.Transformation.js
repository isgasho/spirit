(function() {var implementors = {};
implementors["spirit"] = [];
implementors["spirit_hyper"] = [{"text":"impl&lt;Transport, Inst, BS, Incoming, S, B&gt; Transformation&lt;Builder&lt;Incoming, Exec&gt;, Inst, HyperServer&lt;Transport&gt;&gt; for BuildServer&lt;BS&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Transport: Fragment + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Transport::Resource: IntoIncoming&lt;Incoming = Incoming, Connection = Incoming::Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Incoming: Stream&lt;Error = IoError&gt; + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Incoming::Item: AsyncRead + AsyncWrite + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;BS: Fn(Builder&lt;Incoming&gt;, &amp;HyperServer&lt;Transport&gt;, &amp;'static str) -&gt; Server&lt;Incoming, S&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: MakeServiceRef&lt;Incoming::Item, ReqBody = Body, ResBody = B&gt; + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Payload,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["spirit_reqwest"] = [{"text":"impl&lt;I, F&gt; Transformation&lt;ClientBuilder, I, F&gt; for IntoClient","synthetic":false,"types":[]}];
implementors["spirit_tokio"] = [{"text":"impl&lt;Socket, InputInstaller, SubFragment, F, R&gt; Transformation&lt;Socket, InputInstaller, SubFragment&gt; for HandleSocket&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnMut(Socket, &amp;SubFragment) -&gt; Result&lt;R, AnyError&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: IntoFuture&lt;Item = (), Error = ()&gt; + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;SubFragment: Debug,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Listener, InputInstaller, SubFragment, I, Ctx, F, Fut&gt; Transformation&lt;Listener, InputInstaller, SubFragment&gt; for HandleListenerInit&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Listener: IntoIncoming,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: FnMut(&amp;mut Listener, &amp;SubFragment) -&gt; Result&lt;Ctx, AnyError&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Fn(Listener::Connection, &amp;mut Ctx) -&gt; Fut + Clone + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: IntoFuture&lt;Item = ()&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut::Error: Into&lt;AnyError&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;SubFragment: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ctx: 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Listener, InputInstaller, SubFragment, F, Fut&gt; Transformation&lt;Listener, InputInstaller, SubFragment&gt; for HandleListener&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Listener: IntoIncoming,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Fn(Listener::Connection, &amp;SubFragment) -&gt; Fut + Clone + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: IntoFuture&lt;Item = ()&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut::Error: Into&lt;AnyError&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;SubFragment: Clone + Debug + 'static,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()