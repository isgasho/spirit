(function() {var implementors = {};
implementors["cookie_store"] = [{"text":"impl&lt;'a&gt; Serialize for Cookie&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Serialize for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for Value","synthetic":false,"types":[]},{"text":"impl Serialize for Number","synthetic":false,"types":[]}];
implementors["serde_yaml"] = [{"text":"impl Serialize for Mapping","synthetic":false,"types":[]},{"text":"impl Serialize for Number","synthetic":false,"types":[]},{"text":"impl Serialize for Value","synthetic":false,"types":[]}];
implementors["spirit"] = [{"text":"impl Serialize for Empty","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Serialize for Hidden&lt;T&gt;","synthetic":false,"types":[]}];
implementors["spirit_daemonize"] = [{"text":"impl Serialize for SecId","synthetic":false,"types":[]},{"text":"impl Serialize for Daemon","synthetic":false,"types":[]},{"text":"impl Serialize for UserDaemon","synthetic":false,"types":[]}];
implementors["spirit_dipstick"] = [{"text":"impl Serialize for Config","synthetic":false,"types":[]}];
implementors["spirit_hyper"] = [{"text":"impl&lt;Transport&gt; Serialize for HyperServer&lt;Transport&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Transport: Serialize,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["spirit_log"] = [{"text":"impl Serialize for Cfg","synthetic":false,"types":[]}];
implementors["spirit_reqwest"] = [{"text":"impl Serialize for ReqwestClient","synthetic":false,"types":[]}];
implementors["spirit_tokio"] = [{"text":"impl&lt;A, B&gt; Serialize for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Listener, Limits&gt; Serialize for WithListenLimits&lt;Listener, Limits&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Listener: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;Limits: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Limits","synthetic":false,"types":[]},{"text":"impl Serialize for Listen","synthetic":false,"types":[]},{"text":"impl&lt;ExtraCfg, UnixStreamConfig&gt; Serialize for UnixListen&lt;ExtraCfg, UnixStreamConfig&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ExtraCfg: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;UnixStreamConfig: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;ExtraCfg&gt; Serialize for DatagramListen&lt;ExtraCfg&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ExtraCfg: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Listen","synthetic":false,"types":[]},{"text":"impl Serialize for MaybeDuration","synthetic":false,"types":[]},{"text":"impl Serialize for TcpConfig","synthetic":false,"types":[]},{"text":"impl&lt;ExtraCfg, TcpStreamConfigure&gt; Serialize for TcpListen&lt;ExtraCfg, TcpStreamConfigure&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ExtraCfg: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;TcpStreamConfigure: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;ExtraCfg&gt; Serialize for UdpListen&lt;ExtraCfg&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ExtraCfg: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for ThreadPoolConfig","synthetic":false,"types":[]}];
implementors["toml"] = [{"text":"impl Serialize for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for Value","synthetic":false,"types":[]}];
implementors["url"] = [{"text":"impl&lt;S&gt; Serialize for Host&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Url","synthetic":false,"types":[]}];
implementors["url_serde"] = [{"text":"impl&lt;'a&gt; Serialize for Ser&lt;'a, Url&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Serialize for Ser&lt;'a, Option&lt;Url&gt;&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, String&gt; Serialize for Ser&lt;'a, Host&lt;String&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;String: AsRef&lt;str&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'de, T&gt; Serialize for Serde&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;De&lt;T&gt;: Deserialize&lt;'de&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ser&lt;'a, T&gt;: Serialize,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()